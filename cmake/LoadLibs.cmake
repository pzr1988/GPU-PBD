#LIBRARIES
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/extern)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/extern/eigen)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/extern/cccl/thrust)

#OpenMP
FIND_PACKAGE(OpenMP REQUIRED)
IF(OPENMP_FOUND)
  SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
  SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
ENDIF(OPENMP_FOUND)

#Cuda
IF(NOT CUDA_TOOLKIT_ROOT_DIR)
  SET(CUDA_TOOLKIT_ROOT_DIR "/usr/local/cuda")
ENDIF()
FIND_PACKAGE(CUDA QUIET REQUIRED)
IF(CUDA_FOUND)
  INCLUDE_DIRECTORIES(${CUDA_INCLUDE_DIRS})
  MESSAGE(STATUS "Found CUDA @ ${CUDA_INCLUDE_DIRS}")
  LIST(APPEND ALL_LIBRARIES ${CUDA_LIBRARIES} ${CUDA_cublas_LIBRARY} ${CUDA_cusolver_LIBRARY})
  ADD_DEFINITIONS(-DWITH_CUDA)
ELSE(CUDA_FOUND)
  MESSAGE(WARNING "Cannot find CUDA, compiling without it!")
ENDIF(CUDA_FOUND)

#Boost: we only use headers
IF(MSVC)
  OPTION(USE_MULTI_PRECISION "Enable boost multi-precision" OFF)
ELSE(MSVC)
  OPTION(USE_MULTI_PRECISION "Enable boost multi-precision" ON)
ENDIF(MSVC)
IF(${USE_MULTI_PRECISION})
  #QUADMATH
  FIND_PACKAGE(QUADMATH QUIET)
  IF(QUADMATH_FOUND)
    LIST(APPEND ALL_LIBRARIES ${QUADMATH_LIBRARIES})
    MESSAGE(STATUS "Found QUADMATH @ ${QUADMATH_LIBRARIES}")
    ADD_DEFINITIONS(-DWITH_QUADMATH)
  ELSE(QUADMATH_FOUND)
    MESSAGE(WARNING "Cannot find QUADMATH, compiling without it!")
  ENDIF(QUADMATH_FOUND)

  #MPFR
  FIND_PACKAGE(MPFR QUIET REQUIRED)
  IF(MPFR_FOUND)
    MESSAGE(STATUS "Found MPFR @ ${MPFR_INCLUDES}")
    LIST(APPEND ALL_LIBRARIES ${MPFR_LIBRARIES})
    INCLUDE_DIRECTORIES(${MPFR_INCLUDES})
    ADD_DEFINITIONS(-DWITH_MPFR)
  ELSEIF(MPFR_FOUND)
    MESSAGE(WARNING "Cannot find MPFR, compiling without it!")
  ENDIF(MPFR_FOUND)

  #GMP
  FIND_PACKAGE(GMP QUIET REQUIRED)
  IF(GMP_FOUND)
    MESSAGE(STATUS "Found GMP @ ${GMP_INCLUDES}")
    LIST(APPEND ALL_LIBRARIES ${GMP_LIBRARIES})
    INCLUDE_DIRECTORIES(${GMP_INCLUDES})
  ELSEIF(GMP_FOUND)
    MESSAGE(WARNING "Cannot find GMP, 3D meshing not supported!")
  ENDIF(GMP_FOUND)

  #Boost
  FIND_PACKAGE(Boost QUIET REQUIRED)
  IF(Boost_FOUND)
    INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})
  ELSEIF(Boost_FOUND)
    MESSAGE(WARNING "Cannot find boost, multi-precision not support!")
  ENDIF(Boost_FOUND)
ENDIF()

#let user choose the floating point precision
SET(FLOAT_PRECISION double CACHE STRING "Multi-precision setting")
IF(QUADMATH_FOUND AND MPFR_FOUND AND ${USE_MULTI_PRECISION})
  SET_PROPERTY(CACHE FLOAT_PRECISION PROPERTY STRINGS float double float128 mpfr_float)
ELSEIF(QUADMATH_FOUND AND USE_BOOST)
  SET_PROPERTY(CACHE FLOAT_PRECISION PROPERTY STRINGS float double float128)
ELSEIF(MPFR_FOUND AND USE_BOOST)
  SET_PROPERTY(CACHE FLOAT_PRECISION PROPERTY STRINGS float double mpfr_float)
ELSE()
  SET_PROPERTY(CACHE FLOAT_PRECISION PROPERTY STRINGS float double)
ENDIF()
ADD_DEFINITIONS(-DLSCALAR=${FLOAT_PRECISION})
IF((${FLOAT_PRECISION} STREQUAL float) OR (${FLOAT_PRECISION} STREQUAL double))
  SET(GPU_SUPPORTED ON)
  MESSAGE(STATUS "GPU supported when FLOAT_PRECISION=${FLOAT_PRECISION}!")
ELSE()
  SET(GPU_SUPPORTED OFF)
  MESSAGE(STATUS "GPU not supported when FLOAT_PRECISION=${FLOAT_PRECISION}!")
ENDIF()
